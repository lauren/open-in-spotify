// the parent class for all fstreams.
function Abstract(){Stream.call(this)}function decorate(er,code,me){return er instanceof Error||(er=new Error(er)),er.code=er.code||code,er.path=er.path||me.path,er.fstream_type=er.fstream_type||me.type,er.fstream_path=er.fstream_path||me.path,me._path!==me.path&&(er.fstream_unc_path=er.fstream_unc_path||me._path),me.linkpath&&(er.fstream_linkpath=er.fstream_linkpath||me.linkpath),er.fstream_class=er.fstream_class||me.constructor.name,er.fstream_stack=er.fstream_stack||(new Error).stack.split(/\n/).slice(3).map(function(s){return s.replace(/^    at /,"")}),er}module.exports=Abstract;var Stream=require("stream").Stream,inherits=require("../../inherits/inherits.js");inherits(Abstract,Stream),Abstract.prototype.on=function(ev,fn){return ev==="ready"&&this.ready?process.nextTick(fn.bind(this)):Stream.prototype.on.call(this,ev,fn),this},Abstract.prototype.abort=function(){this._aborted=!0,this.emit("abort")},Abstract.prototype.destroy=function(){},Abstract.prototype.warn=function(msg,code){var me=this,er=decorate(msg,code,me);me.listeners("warn")?me.emit("warn",er):console.error("%s %s\npath = %s\nsyscall = %s\nfstream_type = %s\nfstream_path = %s\nfstream_unc_path = %s\nfstream_class = %s\nfstream_stack =\n%s\n",code||"UNKNOWN",er.stack,er.path,er.syscall,er.fstream_type,er.fstream_path,er.fstream_unc_path,er.fstream_class,er.fstream_stack.join("\n"))},Abstract.prototype.info=function(msg,code){this.emit("info",msg,code)},Abstract.prototype.error=function(msg,code,th){var er=decorate(msg,code,this);if(th)throw er;this.emit("error",er)};