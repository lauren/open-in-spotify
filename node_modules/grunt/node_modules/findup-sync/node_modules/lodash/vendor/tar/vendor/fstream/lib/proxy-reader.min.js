// A reader for when we don't yet know what kind of thing
// the thing is.
function ProxyReader(props){var me=this;if(!(me instanceof ProxyReader))throw new Error("ProxyReader must be called as constructor.");me.props=props,me._buffer=[],me.ready=!1,Reader.call(me,props)}module.exports=ProxyReader;var Reader=require("./reader.js"),getType=require("./get-type.js"),inherits=require("../../inherits/inherits.js"),fs=require("../../graceful-fs/graceful-fs.js");inherits(ProxyReader,Reader),ProxyReader.prototype._stat=function(){var me=this,props=me.props,stat=props.follow?"stat":"lstat";fs[stat](props.path,function(er,current){var type;er||!current?type="File":type=getType(current),props[type]=!0,props.type=me.type=type,me._old=current,me._addProxy(Reader(props,current))})},ProxyReader.prototype._addProxy=function(proxy){var me=this;if(me._proxyTarget)return me.error("proxy already set");me._proxyTarget=proxy,proxy._proxy=me,["error","data","end","close","linkpath","entry","entryEnd","child","childEnd","warn","stat"].forEach(function(ev){proxy.on(ev,me.emit.bind(me,ev))}),me.emit("proxy",proxy),proxy.on("ready",function(){me.ready=!0,me.emit("ready")});var calls=me._buffer;me._buffer.length=0,calls.forEach(function(c){proxy[c[0]].apply(proxy,c[1])})},ProxyReader.prototype.pause=function(){return this._proxyTarget?this._proxyTarget.pause():!1},ProxyReader.prototype.resume=function(){return this._proxyTarget?this._proxyTarget.resume():!1};