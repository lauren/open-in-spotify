// It is expected that, when .add() returns false, the consumer
// of the DirWriter will pause until a "drain" event occurs. Note
// that this is *almost always going to be the case*, unless the
// thing being written is some sort of unsupported type, and thus
// skipped over.
function DirWriter(props){var me=this;me instanceof DirWriter||me.error("DirWriter must be called as constructor.",null,!0),(props.type!=="Directory"||!props.Directory)&&me.error("Non-directory type "+props.type+" "+JSON.stringify(props),null,!0),Writer.call(this,props)}module.exports=DirWriter;var fs=require("../../graceful-fs/graceful-fs.js"),fstream=require("../fstream.js"),Writer=require("./writer.js"),inherits=require("../../inherits/inherits.js"),mkdir=require("../../mkdirp"),path=require("path"),collect=require("./collect.js");inherits(DirWriter,Writer),DirWriter.prototype._create=function(){var me=this;mkdir(me._path,Writer.dirmode,function(er){if(er)return me.error(er);me.ready=!0,me.emit("ready"),me._process()})},DirWriter.prototype.write=function(){return!0},DirWriter.prototype.end=function(){this._ended=!0,this._process()},DirWriter.prototype.add=function(entry){var me=this;return collect(entry),!me.ready||me._currentEntry?(me._buffer.push(entry),!1):me._ended?me.error("add after end"):(me._buffer.push(entry),me._process(),0===this._buffer.length)},DirWriter.prototype._process=function(){function onend(){if(ended)return;ended=!0,me._currentChild=null,me._processing=!1,me._process()}var me=this;if(me._processing)return;var entry=me._buffer.shift();if(!entry){me.emit("drain"),me._ended&&me._finish();return}me._processing=!0,me.emit("entry",entry);var p=entry;do{var pp=p._path||p.path;if(pp===me.root._path||pp===me._path||pp&&pp.indexOf(me._path)===0)return me._processing=!1,entry._collected&&entry.pipe(),me._process()}while(p=p.parent);var props={parent:me,root:me.root||me,type:entry.type,depth:me.depth+1},p=entry._path||entry.path||entry.props.path;entry.parent&&(p=p.substr(entry.parent._path.length+1)),props.path=path.join(me.path,path.join("/",p)),props.filter=me.filter,Object.keys(entry.props).forEach(function(k){props.hasOwnProperty(k)||(props[k]=entry.props[k])});var child=me._currentChild=new Writer(props);child.on("ready",function(){entry.pipe(child),entry.resume()}),child.on("error",function(er){child._swallowErrors?(me.warn(er),child.emit("end"),child.emit("close")):me.emit("error",er)}),child.on("close",onend);var ended=!1};