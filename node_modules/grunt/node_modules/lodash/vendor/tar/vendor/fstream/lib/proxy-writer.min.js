// A writer for when we don't know what kind of thing
// the thing is.  That is, it's not explicitly set,
// so we're going to make it whatever the thing already
// is, or "File"
//
// Until then, collect all events.
function ProxyWriter(props){var me=this;if(!(me instanceof ProxyWriter))throw new Error("ProxyWriter must be called as constructor.");me.props=props,me._needDrain=!1,Writer.call(me,props)}module.exports=ProxyWriter;var Writer=require("./writer.js"),getType=require("./get-type.js"),inherits=require("../../inherits/inherits.js"),collect=require("./collect.js"),fs=require("fs");inherits(ProxyWriter,Writer),ProxyWriter.prototype._stat=function(){var me=this,props=me.props,stat=props.follow?"stat":"lstat";fs[stat](props.path,function(er,current){var type;er||!current?type="File":type=getType(current),props[type]=!0,props.type=me.type=type,me._old=current,me._addProxy(Writer(props,current))})},ProxyWriter.prototype._addProxy=function(proxy){var me=this;if(me._proxy)return me.error("proxy already set");me._proxy=proxy,["ready","error","close","pipe","drain","warn"].forEach(function(ev){proxy.on(ev,me.emit.bind(me,ev))}),me.emit("proxy",proxy);var calls=me._buffer;calls.forEach(function(c){proxy[c[0]].apply(proxy,c[1])}),me._buffer.length=0,me._needsDrain&&me.emit("drain")},ProxyWriter.prototype.add=function(entry){return collect(entry),this._proxy?this._proxy.add(entry):(this._buffer.push(["add",[entry]]),this._needDrain=!0,!1)},ProxyWriter.prototype.write=function(c){return this._proxy?this._proxy.write(c):(this._buffer.push(["write",[c]]),this._needDrain=!0,!1)},ProxyWriter.prototype.end=function(c){return this._proxy?this._proxy.end(c):(this._buffer.push(["end",[c]]),!1)};